{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { NotificationService } from '../services/notification.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/notification.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"show\": a0\n});\nfunction NavbarComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 7)(2, \"a\", 10);\n    i0.ɵɵtext(3, \"Log In\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\", 7)(5, \"a\", 11);\n    i0.ɵɵtext(6, \"Register\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction NavbarComponent_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"li\", 7)(2, \"a\", 12);\n    i0.ɵɵtext(3, \"Favorites\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"li\", 13)(5, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_container_12_Template_a_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.isDropdownOpen = !ctx_r1.isDropdownOpen);\n    });\n    i0.ɵɵelement(6, \"img\", 15);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 16)(9, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_container_12_Template_a_click_9_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.initiateSignOut());\n    });\n    i0.ɵɵtext(10, \" Log out \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_ng_container_12_Template_a_click_11_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.requestAccountRemoval());\n    });\n    i0.ɵɵtext(12, \" Delete account \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"show\", ctx_r1.isDropdownOpen);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"aria-expanded\", ctx_r1.isDropdownOpen);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r1.currentUser.avatarUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentUser.displayName, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassProp(\"show\", ctx_r1.isDropdownOpen);\n  }\n}\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    authHandler;\n    routeHandler;\n    notificationService;\n    authSub;\n    currentUser;\n    authChecked = false;\n    isMobileMenuOpen = false;\n    toggleMobileMenu() {\n      this.isMobileMenuOpen = !this.isMobileMenuOpen;\n    }\n    constructor(authHandler, routeHandler, notificationService) {\n      this.authHandler = authHandler;\n      this.routeHandler = routeHandler;\n      this.notificationService = notificationService;\n    }\n    ngOnInit() {\n      this.authSub = this.authHandler.currentUser$.subscribe(user => {\n        if (user) {\n          // user.fullname is valid now\n          this.currentUser = {\n            displayName: user.fullname,\n            avatarUrl: user.profileImageUrl\n          };\n        } else {\n          this.currentUser = undefined;\n        }\n        this.authChecked = true;\n      });\n    }\n    ngOnDestroy() {\n      this.authSub?.unsubscribe();\n    }\n    updateUser(user) {\n      if (user) {\n        // Map the backend property names to your navbar's expected names\n        this.currentUser = {\n          displayName: user.fullname,\n          avatarUrl: user.profileImageUrl\n        };\n      } else {\n        this.currentUser = undefined;\n      }\n    }\n    initAuthMonitoring() {\n      this.authSub = this.authHandler.getCurrentUser().subscribe({\n        next: res => this.handleAuthUpdate(res.data),\n        error: () => this.handleAuthClear()\n      });\n    }\n    handleAuthUpdate(data) {\n      // If data has { user: {...} }, then destructure that\n      const userObj = data?.user;\n      if (!userObj) {\n        this.currentUser = undefined;\n        return;\n      }\n      console.log('Gravatar data:', userObj.profileImageUrl);\n      this.currentUser = {\n        displayName: userObj.fullname,\n        avatarUrl: userObj.profileImageUrl\n      };\n      this.authChecked = true;\n    }\n    handleAuthClear() {\n      this.currentUser = undefined;\n      this.authChecked = true;\n    }\n    initiateSignOut() {\n      this.authHandler.logout().subscribe({\n        complete: () => {\n          localStorage.removeItem('selectedArtist');\n          localStorage.removeItem('uiState');\n          this.notificationService.showNotification('danger', 'Logged out successfully!');\n          this.postLogoutActions();\n        }\n      });\n    }\n    requestAccountRemoval() {\n      if (confirm('Permanently remove your account and all data?')) {\n        this.authHandler.deleteAccount().subscribe({\n          complete: () => {\n            this.notificationService.showNotification('danger', 'Account deleted successfully.');\n            this.postLogoutActions();\n          },\n          error: err => {\n            this.notificationService.showNotification('error', 'Account removal failed.');\n            console.error('Account removal failed:', err);\n          }\n        });\n      }\n    }\n    postLogoutActions() {\n      this.currentUser = undefined;\n      this.routeHandler.navigate(['/discover']);\n    }\n    onLogout() {\n      // On logout clear current user and navigate; the BehaviorSubject will update automatically.\n      this.routeHandler.navigate(['/discover']);\n    }\n    static ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.NotificationService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"app-navbar\"]],\n      decls: 13,\n      vars: 5,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\"], [1, \"container\"], [\"routerLink\", \"/\", 1, \"navbar-brand\"], [\"type\", \"button\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\", 3, \"ngClass\"], [1, \"navbar-nav\", \"ms-auto\"], [1, \"nav-item\"], [\"routerLink\", \"/search\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [4, \"ngIf\"], [\"routerLink\", \"/login\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"routerLink\", \"/register\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"routerLink\", \"/favorites\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [1, \"nav-item\", \"dropdown\"], [\"href\", \"javascript:void(0)\", \"id\", \"profileDropdown\", \"role\", \"button\", 1, \"nav-link\", \"dropdown-toggle\", \"d-flex\", \"align-items-center\", 3, \"click\"], [\"alt\", \"User Avatar\", 2, \"width\", \"32px\", \"height\", \"32px\", \"border-radius\", \"50%\", \"margin-right\", \"0.5rem\", 3, \"src\"], [\"aria-labelledby\", \"profileDropdown\", 1, \"dropdown-menu\", \"dropdown-menu-end\"], [\"href\", \"javascript:void(0)\", 1, \"dropdown-item\", 3, \"click\"], [\"href\", \"javascript:void(0)\", 1, \"dropdown-item\", \"text-danger\", 3, \"click\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n          i0.ɵɵtext(3, \"Artist Search\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_4_listener() {\n            return ctx.toggleMobileMenu();\n          });\n          i0.ɵɵelement(5, \"span\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"ul\", 6)(8, \"li\", 7)(9, \"a\", 8);\n          i0.ɵɵtext(10, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(11, NavbarComponent_ng_container_11_Template, 7, 0, \"ng-container\", 9)(12, NavbarComponent_ng_container_12_Template, 13, 7, \"ng-container\", 9);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ctx.isMobileMenuOpen));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", !ctx.currentUser);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentUser);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i2.RouterLink, i2.RouterLinkActive],\n      styles: [\":root{--primary-dark: #2c3e50;--card-blue: #205375;--neutral-white: #ffffff;--navbar-bg: #dee2e6;--dark-blue: #112b3c}header.navbar{background-color:var(--navbar-bg)!important;position:relative;z-index:1000}footer{background-color:var(--dark-blue);padding:1rem;margin-top:auto}.navbar{background-color:var(--navbar-bg);box-shadow:0 2px 4px #0000001a;padding:.8rem 1rem}.navbar .navbar-brand{font-weight:600;color:var(--primary-dark)}.navbar .nav-link{color:var(--primary-dark);margin-left:1.5rem;padding:.5rem 1rem;border-radius:4px;transition:all .2s}.navbar .nav-link.active{background-color:var(--card-blue)!important;color:var(--neutral-white)!important;border:1px solid var(--card-blue)!important}.navbar .nav-link:hover:not(.active){color:var(--card-blue)}\\n\"],\n      encapsulation: 2\n    });\n  }\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}