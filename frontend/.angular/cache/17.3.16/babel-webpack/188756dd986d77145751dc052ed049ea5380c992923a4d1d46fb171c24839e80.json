{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ArtistService = /*#__PURE__*/(() => {\n  class ArtistService {\n    http;\n    apiPath = `${environment.backendUrl}/api/artsy`;\n    apiPathforfav = `${environment.backendUrl}/api/auth`;\n    apiPathforgenes = `${environment.backendUrl}/api`;\n    constructor(http) {\n      this.http = http;\n    }\n    searchArtists(query) {\n      return this.http.get(`${this.apiPath}/search`, {\n        params: {\n          q: query\n        },\n        withCredentials: true\n      }).pipe(map(res => res.artists));\n    }\n    getArtistDetails(id) {\n      return this.http.get(`${this.apiPath}/artists/${id}`, {\n        withCredentials: true\n      }).pipe(map(response => response.data));\n    }\n    getArtistArtworks(artistId) {\n      return this.http.get(`${this.apiPath}/artworks`, {\n        params: {\n          artist_id: artistId\n        },\n        withCredentials: true\n      }).pipe(map(res => {\n        return res._embedded.artworks.map(aw => ({\n          id: aw.id,\n          title: aw.title,\n          date: aw.date,\n          // Flatten the nested _links.thumbnail.href into a top-level \"image\"\n          image: aw._links?.thumbnail?.href || ''\n        }));\n      }));\n    }\n    getArtworkCategories(artworkId) {\n      return this.http.get(`${this.apiPathforgenes}/genes`, {\n        params: {\n          artwork_id: artworkId\n        },\n        withCredentials: true\n      }).pipe(map(res => res.data.categories.map(cat => ({\n        name: cat.name,\n        thumbnail: cat.thumbnail\n      }))));\n    }\n    getSimilarArtists(artistId) {\n      return this.http.get(`${this.apiPath}/artists`, {\n        params: {\n          similar_to_artist_id: artistId\n        },\n        withCredentials: true\n      }).pipe(map(resp => resp.artists));\n    }\n    getFavorites() {\n      return this.http.get(`${this.apiPathforfav}/favorites`, {\n        withCredentials: true\n      }).pipe(map(res => {\n        if (!res.data || !Array.isArray(res.data.data)) {\n          return [];\n        }\n        return res.data.data;\n      }));\n    }\n    addFavorite(artistId) {\n      return this.http.post(`${this.apiPathforfav}/favorites/add`, {\n        artistId\n      }, {\n        withCredentials: true\n      });\n    }\n    removeFavorite(artistId) {\n      return this.http.post(`${this.apiPathforfav}/favorites/remove`, {\n        artistId\n      }, {\n        withCredentials: true\n      });\n    }\n    static ɵfac = function ArtistService_Factory(t) {\n      return new (t || ArtistService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArtistService,\n      factory: ArtistService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ArtistService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}